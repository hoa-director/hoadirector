decoder: null,
encoding: null
},
readable: false,
_events: [Object: null prototype] {
end: [Function: resetHeadersTimeoutOnReqEnd]
},
_eventsCount: 1,
_maxListeners: undefined,
socket: Socket {
connecting: false,
_hadError: false,
_parent: null,
_host: null,
_readableState: ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  paused: false,
  emitClose: false,
  autoDestroy: false,
  destroyed: false,
  defaultEncoding: 'utf8',
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null
},
readable: true,
_events: [Object: null prototype] {
  end: [Array],
  timeout: [Function: socketOnTimeout],
  data: [Function: bound socketOnData],
  error: [Function: socketOnError],
  close: [Array],
  drain: [Function: bound socketOnDrain],
  resume: [Function: onSocketResume],
  pause: [Function: onSocketPause]
},
_eventsCount: 8,
_maxListeners: undefined,
_writableState: WritableState {
  objectMode: false,
  highWaterMark: 16384,
  finalCalled: false,
  needDrain: false,
  ending: false,
  ended: false,
  finished: false,
  destroyed: false,
  decodeStrings: false,
  defaultEncoding: 'utf8',
  length: 0,
  writing: false,
  corked: 0,
  sync: true,
  bufferProcessing: false,
  onwrite: [Function: bound onwrite],
  writecb: null,
  writelen: 0,
  afterWriteTickInfo: null,
  bufferedRequest: null,
  lastBufferedRequest: null,
  pendingcb: 0,
  prefinished: false,
  errorEmitted: false,
  emitClose: false,
  autoDestroy: false,
  bufferedRequestCount: 0,
  corkedRequestsFree: [Object]
},
writable: true,
allowHalfOpen: true,
_sockname: { address: '::1', family: 'IPv6', port: 3000 },
_pendingData: null,
_pendingEncoding: '',
server: Server {
  _events: [Object: null prototype],
  _eventsCount: 3,
  _maxListeners: undefined,
  _connections: 1,
  _handle: [TCP],
  _usingWorkers: false,
  _workers: [],
  _unref: false,
  allowHalfOpen: true,
  pauseOnConnect: false,
  httpAllowHalfOpen: false,
  timeout: 120000,
  keepAliveTimeout: 5000,
  maxHeadersCount: null,
  headersTimeout: 40000,
  _connectionKey: '6::::3000',
  [Symbol(IncomingMessage)]: [Function: IncomingMessage],
  [Symbol(ServerResponse)]: [Function: ServerResponse],
  [Symbol(asyncId)]: 9
},
_server: Server {
  _events: [Object: null prototype],
  _eventsCount: 3,
  _maxListeners: undefined,
  _connections: 1,
  _handle: [TCP],
  _usingWorkers: false,
  _workers: [],
  _unref: false,
  allowHalfOpen: true,
  pauseOnConnect: false,
  httpAllowHalfOpen: false,
  timeout: 120000,
  keepAliveTimeout: 5000,
  maxHeadersCount: null,
  headersTimeout: 40000,
  _connectionKey: '6::::3000',
  [Symbol(IncomingMessage)]: [Function: IncomingMessage],
  [Symbol(ServerResponse)]: [Function: ServerResponse],
  [Symbol(asyncId)]: 9
},
timeout: 120000,
parser: HTTPParser {
  '0': [Function: parserOnHeaders],
  '1': [Function: parserOnHeadersComplete],
  '2': [Function: parserOnBody],
  '3': [Function: parserOnMessageComplete],
  '4': [Function: bound onParserExecute],
  _headers: [],
  _url: '',
  socket: [Circular],
  incoming: [Circular],
  outgoing: null,
  maxHeaderPairs: 2000,
  _consumed: true,
  onIncoming: [Function: bound parserOnIncoming],
  parsingHeadersStart: 1587698678865
},
on: [Function: socketListenerWrap],
addListener: [Function: socketListenerWrap],
prependListener: [Function: socketListenerWrap],
_paused: false,
_httpMessage: ServerResponse {
  _events: [Object: null prototype],
  _eventsCount: 1,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: [Circular],
  connection: [Circular],
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData],
  _sent100: false,
  _expect_continue: false,
  req: [Circular],
  locals: [Object: null prototype] {},
  writeHead: [Function: writeHead],
  end: [Function: end],
  [Symbol(kNeedDrain)]: false,
  [Symbol(isCorked)]: false,
  [Symbol(kOutHeaders)]: [Object: null prototype]
},
_peername: { address: '::1', family: 'IPv6', port: 54916 },
[Symbol(asyncId)]: 17,
[Symbol(kHandle)]: TCP {
  reading: true,
  onconnection: null,
  _consumed: true,
  [Symbol(owner)]: [Circular]
},
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: Timeout {
  _idleTimeout: 120000,
  _idlePrev: [TimersList],
  _idleNext: [TimersList],
  _idleStart: 5030,
  _onTimeout: [Function: bound ],
  _timerArgs: undefined,
  _repeat: null,
  _destroyed: false,
  [Symbol(refed)]: false,
  [Symbol(asyncId)]: 18,
  [Symbol(triggerId)]: 17
},
[Symbol(kBuffer)]: null,
[Symbol(kBufferCb)]: null,
[Symbol(kBufferGen)]: null,
[Symbol(kBytesRead)]: 0,
[Symbol(kBytesWritten)]: 0
},
connection: Socket {
connecting: false,
_hadError: false,
_parent: null,
_host: null,
_readableState: ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  paused: false,
  emitClose: false,
  autoDestroy: false,
  destroyed: false,
  defaultEncoding: 'utf8',
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null
},
readable: true,
_events: [Object: null prototype] {
  end: [Array],
  timeout: [Function: socketOnTimeout],
  data: [Function: bound socketOnData],
  error: [Function: socketOnError],
  close: [Array],
  drain: [Function: bound socketOnDrain],
  resume: [Function: onSocketResume],
  pause: [Function: onSocketPause]
},
_eventsCount: 8,
_maxListeners: undefined,
_writableState: WritableState {
  objectMode: false,
  highWaterMark: 16384,
  finalCalled: false,
  needDrain: false,
  ending: false,
  ended: false,
  finished: false,
  destroyed: false,
  decodeStrings: false,
  defaultEncoding: 'utf8',
  length: 0,
  writing: false,
  corked: 0,
  sync: true,
  bufferProcessing: false,
  onwrite: [Function: bound onwrite],
  writecb: null,
  writelen: 0,
  afterWriteTickInfo: null,
  bufferedRequest: null,
  lastBufferedRequest: null,
  pendingcb: 0,
  prefinished: false,
  errorEmitted: false,
  emitClose: false,
  autoDestroy: false,
  bufferedRequestCount: 0,
  corkedRequestsFree: [Object]
},
writable: true,
allowHalfOpen: true,
_sockname: { address: '::1', family: 'IPv6', port: 3000 },
_pendingData: null,
_pendingEncoding: '',
server: Server {
  _events: [Object: null prototype],
  _eventsCount: 3,
  _maxListeners: undefined,
  _connections: 1,
  _handle: [TCP],
  _usingWorkers: false,
  _workers: [],
  _unref: false,
  allowHalfOpen: true,
  pauseOnConnect: false,
  httpAllowHalfOpen: false,
  timeout: 120000,
  keepAliveTimeout: 5000,
  maxHeadersCount: null,
  headersTimeout: 40000,
  _connectionKey: '6::::3000',
  [Symbol(IncomingMessage)]: [Function: IncomingMessage],
  [Symbol(ServerResponse)]: [Function: ServerResponse],
  [Symbol(asyncId)]: 9
},
_server: Server {
  _events: [Object: null prototype],
  _eventsCount: 3,
  _maxListeners: undefined,
  _connections: 1,
  _handle: [TCP],
  _usingWorkers: false,
  _workers: [],
  _unref: false,
  allowHalfOpen: true,
  pauseOnConnect: false,
  httpAllowHalfOpen: false,
  timeout: 120000,
  keepAliveTimeout: 5000,
  maxHeadersCount: null,
  headersTimeout: 40000,
  _connectionKey: '6::::3000',
  [Symbol(IncomingMessage)]: [Function: IncomingMessage],
  [Symbol(ServerResponse)]: [Function: ServerResponse],
  [Symbol(asyncId)]: 9
},
timeout: 120000,
parser: HTTPParser {
  '0': [Function: parserOnHeaders],
  '1': [Function: parserOnHeadersComplete],
  '2': [Function: parserOnBody],
  '3': [Function: parserOnMessageComplete],
  '4': [Function: bound onParserExecute],
  _headers: [],
  _url: '',
  socket: [Circular],
  incoming: [Circular],
  outgoing: null,
  maxHeaderPairs: 2000,
  _consumed: true,
  onIncoming: [Function: bound parserOnIncoming],
  parsingHeadersStart: 1587698678865
},
on: [Function: socketListenerWrap],
addListener: [Function: socketListenerWrap],
prependListener: [Function: socketListenerWrap],
_paused: false,
_httpMessage: ServerResponse {
  _events: [Object: null prototype],
  _eventsCount: 1,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: [Circular],
  connection: [Circular],
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData],
  _sent100: false,
  _expect_continue: false,
  req: [Circular],
  locals: [Object: null prototype] {},
  writeHead: [Function: writeHead],
  end: [Function: end],
  [Symbol(kNeedDrain)]: false,
  [Symbol(isCorked)]: false,
  [Symbol(kOutHeaders)]: [Object: null prototype]
},
_peername: { address: '::1', family: 'IPv6', port: 54916 },
[Symbol(asyncId)]: 17,
[Symbol(kHandle)]: TCP {
  reading: true,
  onconnection: null,
  _consumed: true,
  [Symbol(owner)]: [Circular]
},
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: Timeout {
  _idleTimeout: 120000,
  _idlePrev: [TimersList],
  _idleNext: [TimersList],
  _idleStart: 5030,
  _onTimeout: [Function: bound ],
  _timerArgs: undefined,
  _repeat: null,
  _destroyed: false,
  [Symbol(refed)]: false,
  [Symbol(asyncId)]: 18,
  [Symbol(triggerId)]: 17
},
[Symbol(kBuffer)]: null,
[Symbol(kBufferCb)]: null,
[Symbol(kBufferGen)]: null,
[Symbol(kBytesRead)]: 0,
[Symbol(kBytesWritten)]: 0
},
httpVersionMajor: 1,
httpVersionMinor: 1,
httpVersion: '1.1',
complete: true,
headers: {
'content-type': 'application/x-www-form-urlencoded',
'user-agent': 'PostmanRuntime/7.24.1',
accept: '*/*',
'cache-control': 'no-cache',
'postman-token': 'f7a71b34-8f9b-46ad-ba0a-0346e0af48ca',
host: 'localhost:3000',
'accept-encoding': 'gzip, deflate, br',
connection: 'keep-alive',
'content-length': '62',
cookie: 'connect.sid=s%3A653dQWrA61c05IUNrbsKKf0slSRb8iN5.9QByZI8MRd4dLqOAa%2B9Nvn1oNi4vTmNCuriFI5QYJx4'
},
rawHeaders: [
'Content-Type',
'application/x-www-form-urlencoded',
'User-Agent',
'PostmanRuntime/7.24.1',
'Accept',
'*/*',
'Cache-Control',
'no-cache',
'Postman-Token',
'f7a71b34-8f9b-46ad-ba0a-0346e0af48ca',
'Host',
'localhost:3000',
'Accept-Encoding',
'gzip, deflate, br',
'Connection',
'keep-alive',
'Content-Length',
'62',
'Cookie',
'connect.sid=s%3A653dQWrA61c05IUNrbsKKf0slSRb8iN5.9QByZI8MRd4dLqOAa%2B9Nvn1oNi4vTmNCuriFI5QYJx4'
],
trailers: {},
rawTrailers: [],
aborted: false,
upgrade: false,
url: '/login',
method: 'POST',
statusCode: null,
statusMessage: null,
client: Socket {
connecting: false,
_hadError: false,
_parent: null,
_host: null,
_readableState: ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  paused: false,
  emitClose: false,
  autoDestroy: false,
  destroyed: false,
  defaultEncoding: 'utf8',
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null
},
readable: true,
_events: [Object: null prototype] {
  end: [Array],
  timeout: [Function: socketOnTimeout],
  data: [Function: bound socketOnData],
  error: [Function: socketOnError],
  close: [Array],
  drain: [Function: bound socketOnDrain],
  resume: [Function: onSocketResume],
  pause: [Function: onSocketPause]
},
_eventsCount: 8,
_maxListeners: undefined,
_writableState: WritableState {
  objectMode: false,
  highWaterMark: 16384,
  finalCalled: false,
  needDrain: false,
  ending: false,
  ended: false,
  finished: false,
  destroyed: false,
  decodeStrings: false,
  defaultEncoding: 'utf8',
  length: 0,
  writing: false,
  corked: 0,
  sync: true,
  bufferProcessing: false,
  onwrite: [Function: bound onwrite],
  writecb: null,
  writelen: 0,
  afterWriteTickInfo: null,
  bufferedRequest: null,
  lastBufferedRequest: null,
  pendingcb: 0,
  prefinished: false,
  errorEmitted: false,
  emitClose: false,
  autoDestroy: false,
  bufferedRequestCount: 0,
  corkedRequestsFree: [Object]
},
writable: true,
allowHalfOpen: true,
_sockname: { address: '::1', family: 'IPv6', port: 3000 },
_pendingData: null,
_pendingEncoding: '',
server: Server {
  _events: [Object: null prototype],
  _eventsCount: 3,
  _maxListeners: undefined,
  _connections: 1,
  _handle: [TCP],
  _usingWorkers: false,
  _workers: [],
  _unref: false,
  allowHalfOpen: true,
  pauseOnConnect: false,
  httpAllowHalfOpen: false,
  timeout: 120000,
  keepAliveTimeout: 5000,
  maxHeadersCount: null,
  headersTimeout: 40000,
  _connectionKey: '6::::3000',
  [Symbol(IncomingMessage)]: [Function: IncomingMessage],
  [Symbol(ServerResponse)]: [Function: ServerResponse],
  [Symbol(asyncId)]: 9
},
_server: Server {
  _events: [Object: null prototype],
  _eventsCount: 3,
  _maxListeners: undefined,
  _connections: 1,
  _handle: [TCP],
  _usingWorkers: false,
  _workers: [],
  _unref: false,
  allowHalfOpen: true,
  pauseOnConnect: false,
  httpAllowHalfOpen: false,
  timeout: 120000,
  keepAliveTimeout: 5000,
  maxHeadersCount: null,
  headersTimeout: 40000,
  _connectionKey: '6::::3000',
  [Symbol(IncomingMessage)]: [Function: IncomingMessage],
  [Symbol(ServerResponse)]: [Function: ServerResponse],
  [Symbol(asyncId)]: 9
},
timeout: 120000,
parser: HTTPParser {
  '0': [Function: parserOnHeaders],
  '1': [Function: parserOnHeadersComplete],
  '2': [Function: parserOnBody],
  '3': [Function: parserOnMessageComplete],
  '4': [Function: bound onParserExecute],
  _headers: [],
  _url: '',
  socket: [Circular],
  incoming: [Circular],
  outgoing: null,
  maxHeaderPairs: 2000,
  _consumed: true,
  onIncoming: [Function: bound parserOnIncoming],
  parsingHeadersStart: 1587698678865
},
on: [Function: socketListenerWrap],
addListener: [Function: socketListenerWrap],
prependListener: [Function: socketListenerWrap],
_paused: false,
_httpMessage: ServerResponse {
  _events: [Object: null prototype],
  _eventsCount: 1,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: [Circular],
  connection: [Circular],
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData],
  _sent100: false,
  _expect_continue: false,
  req: [Circular],
  locals: [Object: null prototype] {},
  writeHead: [Function: writeHead],
  end: [Function: end],
  [Symbol(kNeedDrain)]: false,
  [Symbol(isCorked)]: false,
  [Symbol(kOutHeaders)]: [Object: null prototype]
},
_peername: { address: '::1', family: 'IPv6', port: 54916 },
[Symbol(asyncId)]: 17,
[Symbol(kHandle)]: TCP {
  reading: true,
  onconnection: null,
  _consumed: true,
  [Symbol(owner)]: [Circular]
},
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: Timeout {
  _idleTimeout: 120000,
  _idlePrev: [TimersList],
  _idleNext: [TimersList],
  _idleStart: 5030,
  _onTimeout: [Function: bound ],
  _timerArgs: undefined,
  _repeat: null,
  _destroyed: false,
  [Symbol(refed)]: false,
  [Symbol(asyncId)]: 18,
  [Symbol(triggerId)]: 17
},
[Symbol(kBuffer)]: null,
[Symbol(kBufferCb)]: null,
[Symbol(kBufferGen)]: null,
[Symbol(kBytesRead)]: 0,
[Symbol(kBytesWritten)]: 0
},
_consuming: true,
_dumped: false,
next: [Function: next],
baseUrl: '/user',
originalUrl: '/user/login',
_parsedUrl: Url {
protocol: null,
slashes: null,
auth: null,
host: null,
port: null,
hostname: null,
hash: null,
search: null,
query: null,
pathname: '/login',
path: '/login',
href: '/login',
_raw: '/login'
},
params: {},
query: {},
res: ServerResponse {
_events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
_eventsCount: 1,
_maxListeners: undefined,
outputData: [],
outputSize: 0,
writable: true,
_last: false,
chunkedEncoding: false,
shouldKeepAlive: true,
useChunkedEncodingByDefault: true,
sendDate: true,
_removedConnection: false,
_removedContLen: false,
_removedTE: false,
_contentLength: null,
_hasBody: true,
_trailer: '',
finished: false,
_headerSent: false,
socket: Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: [ReadableState],
  readable: true,
  _events: [Object: null prototype],
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: [WritableState],
  writable: true,
  allowHalfOpen: true,
  _sockname: [Object],
  _pendingData: null,
  _pendingEncoding: '',
  server: [Server],
  _server: [Server],
  timeout: 120000,
  parser: [HTTPParser],
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  _httpMessage: [Circular],
  _peername: [Object],
  [Symbol(asyncId)]: 17,
  [Symbol(kHandle)]: [TCP],
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: Timeout {
    _idleTimeout: 120000,
    _idlePrev: [TimersList],
    _idleNext: [TimersList],
    _idleStart: 5030,
    _onTimeout: [Function: bound ],
    _timerArgs: undefined,
    _repeat: null,
    _destroyed: false,
    [Symbol(refed)]: false,
    [Symbol(asyncId)]: 18,
    [Symbol(triggerId)]: 17
  },
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
},
connection: Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: [ReadableState],
  readable: true,
  _events: [Object: null prototype],
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: [WritableState],
  writable: true,
  allowHalfOpen: true,
  _sockname: [Object],
  _pendingData: null,
  _pendingEncoding: '',
  server: [Server],
  _server: [Server],
  timeout: 120000,
  parser: [HTTPParser],
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  _httpMessage: [Circular],
  _peername: [Object],
  [Symbol(asyncId)]: 17,
  [Symbol(kHandle)]: [TCP],
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: Timeout {
    _idleTimeout: 120000,
    _idlePrev: [TimersList],
    _idleNext: [TimersList],
    _idleStart: 5030,
    _onTimeout: [Function: bound ],
    _timerArgs: undefined,
    _repeat: null,
    _destroyed: false,
    [Symbol(refed)]: false,
    [Symbol(asyncId)]: 18,
    [Symbol(triggerId)]: 17
  },
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
},
_header: null,
_onPendingData: [Function: bound updateOutgoingData],
_sent100: false,
_expect_continue: false,
req: [Circular],
locals: [Object: null prototype] {},
writeHead: [Function: writeHead],
end: [Function: end],
[Symbol(kNeedDrain)]: false,
[Symbol(isCorked)]: false,
[Symbol(kOutHeaders)]: [Object: null prototype] {
  'x-powered-by': [Array],
  'access-control-allow-origin': [Array]
}
},
bugsnag: BugsnagClient {
notifier: {
  name: 'Bugsnag Node',
  version: '6.5.2',
  url: 'https://github.com/bugsnag/bugsnag-js'
},
_configured: true,
_opts: {},
config: {
  apiKey: '05e6181845da22bbdbdee88ba4ef8641',
  appVersion: '0.0.0',
  appType: null,
  autoNotify: true,
  beforeSend: [Array],
  endpoints: [Object],
  autoCaptureSessions: true,
  notifyReleaseStages: null,
  releaseStage: 'development',
  maxBreadcrumbs: 20,
  user: null,
  metaData: null,
  logger: [Object],
  filters: [Array],
  projectRoot: '/Users/johngellert/Documents/hoadirector/server',
  hostname: 'Johns-MacBook-Pro.local',
  agent: undefined,
  onUncaughtException: [Function],
  onUnhandledRejection: [Function],
  sendCode: true,
  sessionSummaryInterval: undefined
},
_delivery: {
  sendReport: [Function: sendReport],
  sendSession: [Function: sendSession]
},
_logger: {
  debug: [Function: bound bound consoleCall],
  info: [Function: bound bound consoleCall],
  warn: [Function: bound bound consoleCall],
  error: [Function: bound bound consoleCall]
},
_plugins: {},
_session: Session {
  id: 'ck9dmst3w00005kp9hyrc0fcl',
  startedAt: '2020-04-24T03:24:38.876Z',
  _handled: 0,
  _unhandled: 0
},
breadcrumbs: [],
app: { version: '0.0.0' },
context: undefined,
device: { hostname: 'Johns-MacBook-Pro.local', runtimeVersions: [Object] },
metaData: { request: [Object] },
request: {
  clientIp: '::1',
  headers: [Object],
  httpMethod: 'POST',
  url: 'http://localhost:3000/user/login',
  referer: undefined
},
user: {},
BugsnagClient: [Function: BugsnagClient],
BugsnagReport: [Function: BugsnagReport] {
  getStacktrace: [Function],
  ensureReport: [Function]
},
BugsnagBreadcrumb: [Function: BugsnagBreadcrumb],
BugsnagSession: [Function: Session],
notify: [Function]
},
body: {
email: 'gregJablonske@edinarealty.com',
password: 'supersecurepass'
},
_body: true,
length: undefined,
_parsedOriginalUrl: Url {
protocol: null,
slashes: null,
auth: null,
host: null,
port: null,
hostname: null,
hash: null,
search: null,
query: null,
pathname: '/user/login',
path: '/user/login',
href: '/user/login',
_raw: '/user/login'
},
sessionStore: MemoryStore {
_events: [Object: null prototype] {
  disconnect: [Function: ondisconnect],
  connect: [Function: onconnect]
},
_eventsCount: 2,
_maxListeners: undefined,
sessions: [Object: null prototype] {},
generate: [Function]
},
sessionID: 'sWPNeL2VqtUrCr8SihZeuVHRz3-Mh_59',
session: Session {
cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true },
passport: { user: 19 }
},
_passport: {
instance: Authenticator {
  _key: 'passport',
  _strategies: [Object],
  _serializers: [Array],
  _deserializers: [Array],
  _infoTransformers: [],
  _framework: [Object],
  _userProperty: 'user',
  _sm: [SessionManager],
  Authenticator: [Function: Authenticator],
  Passport: [Function: Authenticator],
  Strategy: [Function],
  strategies: [Object]
},
session: { user: 19 }
},
route: Route {
path: '/login/',
stack: [ [Layer], [Layer] ],
methods: { post: true }
},
user: User {
dataValues: {
  id: 19,
  email: 'gregjablonske@edinarealty.com',
  password: '$2b$10$xCwb5sD1Bo/Q/onqNf8cj.Fzh0sCPFyjQPRnbXoLlxXEwq9vWNkAS',
  number: '5555555555',
  role: 99,
  firstName: 'Greg',
  lastName: 'Jablonske',
  createdAt: 2018-08-15T00:12:03.000Z,
  updatedAt: 2020-04-09T17:56:06.000Z,
  deletedAt: null
},
_previousDataValues: {
  id: 19,
  email: 'gregjablonske@edinarealty.com',
  password: '$2b$10$xCwb5sD1Bo/Q/onqNf8cj.Fzh0sCPFyjQPRnbXoLlxXEwq9vWNkAS',
  number: '5555555555',
  role: 99,
  firstName: 'Greg',
  lastName: 'Jablonske',
  createdAt: 2018-08-15T00:12:03.000Z,
  updatedAt: 2020-04-09T17:56:06.000Z,
  deletedAt: null
},
_changed: {},
_modelOptions: {
  timestamps: true,
  validate: {},
  freezeTableName: false,
  underscored: false,
  underscoredAll: false,
  paranoid: false,
  rejectOnEmpty: false,
  whereCollection: [Object],
  schema: null,
  schemaDelimiter: '',
  defaultScope: {},
  scopes: [],
  indexes: [],
  name: [Object],
  omitNull: false,
  sequelize: [Sequelize],
  tableName: 'users',
  hooks: [Object],
  uniqueKeys: [Object]
},
_options: {
  isNewRecord: false,
  _schema: null,
  _schemaDelimiter: '',
  raw: true,
  attributes: [Array]
},
__eagerlyLoadedAssociations: [],
isNewRecord: false
},
authInfo: {}
}